// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResourceTypeFields should render correctly 1`] = `
<div
  className="mainContainer"
>
  <div
    className="imgContainer"
  >
    <WithStyles(Avatar)
      className="avatar"
      src=""
    />
    <TextField
      fullWidth={true}
      label="typeCard.fields.icon.label_i18n"
      onChange={[Function]}
      required={false}
      select={false}
      value=""
      variant="standard"
    />
    <input
      accept="*"
      id="raised-button-file"
      multiple={true}
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
    <label
      htmlFor="raised-button-file"
    >
      <WithStyles(Button)
        component="span"
        variant="contained"
      >
        common.upload_i18n
      </WithStyles(Button)>
    </label>
  </div>
  <div>
    <TextField
      error={true}
      fullWidth={true}
      helperText="typeCard.error.uniqueTypeName_i18n"
      label="typeCard.fields.nameLabel_i18n"
      onChange={[Function]}
      required={true}
      select={false}
      value=""
      variant="standard"
    />
  </div>
  <div>
    <div>
      <WithStyles(Tooltip)
        title="typeCard.tooltips.active.false_i18n"
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Checkbox)
              checked={false}
              onChange={[Function]}
            />
          }
          label="typeCard.fields.activeLabel_i18n"
        />
      </WithStyles(Tooltip)>
    </div>
    <div>
      <WithStyles(WithFormControlContext(FormControlLabel))
        control={
          <WithStyles(Checkbox)
            checked={false}
            onChange={[Function]}
          />
        }
        label="typeCard.fields.backupLabel_i18n"
      />
    </div>
    <div>
      <WithStyles(Tooltip)
        title="typeCard.tooltips.quantitative.undefined_i18n"
      >
        <WithStyles(WithFormControlContext(FormControlLabel))
          control={
            <WithStyles(Checkbox)
              checked={false}
            />
          }
          label="typeCard.fields.quantitativeLabel_i18n"
        />
      </WithStyles(Tooltip)>
    </div>
  </div>
  <div>
    <TextField
      fullWidth={true}
      label="typeCard.fields.descriptionLabel_i18n"
      multiline={true}
      onChange={[Function]}
      required={false}
      rows={6}
      select={false}
      value=""
      variant="standard"
    />
  </div>
</div>
`;
